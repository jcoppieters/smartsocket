{"version":3,"sources":["src/app/tabs/tabs/tabs.page.html","src/app/core/stdUX.ts","src/app/tabs/config/config.general.ts","src/app/tabs/config/config.groups.ts","src/app/tabs/config/config.masters.scss","src/app/tabs/config/config.masters.ts","src/app/tabs/config/config.module.ts","src/app/tabs/config/config.scenes.ts","src/app/tabs/config/config.scss","src/app/tabs/config/config.ts","src/app/tabs/config/edit.master.ts","src/app/tabs/config/edit.node.scss","src/app/tabs/config/edit.node.ts","src/app/tabs/config/edit.scene.ts","src/app/tabs/config/select.trigger.ts","src/app/tabs/control/control.page.ts","src/app/tabs/moods/moods.page.ts","src/app/tabs/stores/stores.page.ts","src/app/tabs/tabs/tabs-routing.module.ts","src/app/tabs/tabs/tabs.module.ts","src/app/tabs/tabs/tabs.page.ts","src/app/tabs/temperature/temperature.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-tabs>\\n\\n  <ion-tab-bar slot=\\\"bottom\\\">\\n    <ion-tab-button tab=\\\"control\\\">\\n      <ion-icon src=\\\"/assets/icon/light.svg\\\"></ion-icon>\\n      <ion-label>{{'Page.Control' |_ }}</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"temperature\\\">\\n      <ion-icon src=\\\"/assets/icon/temperature.svg\\\"></ion-icon>\\n      <ion-label>{{'Page.Temperature' |_ }}</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"stores\\\" [ngClass]=\\\"!system.config.stores? 'ion-hide':''\\\">\\n      <ion-icon src=\\\"/assets/icon/stores.svg\\\"></ion-icon>\\n      <ion-label>{{'Page.Stores' |_ }}</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"moods\\\">\\n      <ion-icon name=\\\"list\\\"></ion-icon>\\n      <ion-label>{{'Page.Moods' |_ }}</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"config\\\">\\n      <ion-icon name=\\\"settings-outline\\\"></ion-icon>\\n      <ion-label>{{'Page.Config' |_ }}</ion-label>\\n    </ion-tab-button>\\n  </ion-tab-bar>\\n\\n</ion-tabs>\\n\"","import { AlertController, ModalController } from '@ionic/angular';\n\nexport function doAlert(alertCtrl: AlertController, options): Promise<string> {\n  return new Promise(async (resolve, reject) => {\n    const buttons = options.buttons.map(b => {\n      return {text: b.text, \n              handler: () => resolve(b.id)};\n    });\n    const alert = await alertCtrl.create({\n      header: 'Duotecno',\n      subHeader: options.title,\n      message: options.message,\n      buttons\n    });\n    await alert.present();\n  });\n}\n\nexport function doAsk(alertCtrl: AlertController, options): Promise<object> {\n  return new Promise(async (resolve, reject) => {\n    const buttons = options.buttons.map(b => {\n      return {text: b.text, \n              handler: (data) => { b.handler && b.handler(data); resolve(data); }};\n    });\n    const alert = await alertCtrl.create({\n      header: 'Duotecno',\n      subHeader: options.title,\n      message: options.message,\n      buttons: buttons,\n      inputs: options.inputs\n    });\n    await alert.present();\n  });\n}\n\n\nexport async function doModal(modalCtl: ModalController,\n                              modalComponent: any, options) {\n  const modal = await modalCtl.create({ component: modalComponent,\n                                        componentProps: options });\n  await modal.present();\n  const { data } = await modal.onDidDismiss();\n  return data || {};\n}\n","import { Component } from '@angular/core';\nimport { System } from 'src/app/system/system';\nimport { AlertController } from '@ionic/angular';\nimport { doAsk, doAlert } from 'src/app/core/stdUX';\nimport { Translate } from 'src/app/core/translate.pipe';\n\n@Component({\n  selector: 'config-general',\n  template: `\n    <ion-list>\n      <ion-item-group>\n        <ion-item-divider>\n          <ion-label>\n            {{ \"Config.Settings\" |_ }}\n          </ion-label>\n        </ion-item-divider>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Language\" |_ }}</ion-label>\n          <ion-select name=\"language\" interface=\"popover\"\n                      [(ngModel)]=\"system.config.language\" (ionChange)=\"saveConfig()\">\n            <ion-select-option value=\"EN\">English</ion-select-option>\n            <ion-select-option value=\"NL\">Nederlands</ion-select-option>\n            <ion-select-option value=\"FR\">Français</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.SeparateStores\" |_ }}</ion-label>\n          <ion-toggle name=\"stores\" [(ngModel)]=\"system.config.stores\" (ionChange)=\"saveConfig()\"></ion-toggle>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.MultipleGroups\" |_ }}</ion-label>\n          <ion-toggle name=\"multiple\" [(ngModel)]=\"system.config.multiple\" (ionChange)=\"saveConfig()\"></ion-toggle>\n        </ion-item>\n      </ion-item-group>\n\n      <ion-list-group>\n        <ion-item-divider>\n          <ion-label>\n            {{ \"Config.Communication\" |_ }} <span class=\"comm\">({{ system.config.socketserver }})</span>\n          </ion-label>\n        </ion-item-divider>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Advanced\" |_ }}</ion-label>\n          <ion-toggle name=\"communication\" [(ngModel)]=\"showcomm\" (ionChange)=\"allowComm()\"></ion-toggle>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"showcomm\">\n          <ion-label position=\"stacked\">Socket server IP</ion-label>\n          <ion-input name=\"socketserver\" type=\"text\" [(ngModel)]=\"system.config.socketserver\" (ionBlur)=\"saveConfig()\"></ion-input>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"showcomm\">\n          <ion-label position=\"stacked\">Socket server port</ion-label>\n          <ion-input name=\"socketport\" type=\"text\" [(ngModel)]=\"system.config.socketport\" (ionBlur)=\"saveConfig()\"></ion-input>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"showcomm\">\n          <ion-label position=\"stacked\">Remote Scenes</ion-label>\n          <ion-toggle name=\"remotescenes\" [(ngModel)]=\"system.config.remotescenes\" (ionChange)=\"saveConfig()\"></ion-toggle>\n        </ion-item>\n      </ion-list-group>\n\n      <ion-list-group>\n        <ion-item-divider>\n          <ion-label>\n            {{ \"Config.Backup\" |_ }}\n          </ion-label>\n        </ion-item-divider>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Backup.config\" |_ }}</ion-label>\n          <ion-buttons><ion-button (click)=\"doBackup()\"><ion-icon name=\"settings-outline\" slot=\"end\"></ion-icon>{{ \"Config.Backup.send\" |_ }}</ion-button></ion-buttons>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Backup.get\" |_ }}</ion-label>\n          <ion-buttons><ion-button (click)=\"doRequestBackup()\"><ion-icon name=\"settings-outline\" slot=\"end\"></ion-icon>{{ \"Config.Backup.fetch\" |_ }}</ion-button></ion-buttons>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"system.backup\">\n          <ion-label>{{ \"Config.Backup.restore\" |_ }}: \n            <small>{{ system.backup.config.cmasters.length }} {{ \"Config.Masters\" |_ }}, \n                    {{ system.backup.config.cunits.length }} {{ \"Config.Units\" |_ }}, \n                    {{ system.backup.groups.length }} {{ \"Config.Groups\" |_ }},\n                    {{ system.backup.scenes.length }} {{ \"Config.Scenes\" |_ }}</small>\n          </ion-label>\n          <ion-buttons>\n            <ion-button (click)=\"doRestore()\"><ion-icon name=\"settings-outline\" slot=\"end\"></ion-icon>{{ \"Config.Backup.replace\" |_ }}</ion-button>\n          </ion-buttons>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"system.config.remotescenes\">\n          <ion-label>{{ \"Config.Backup.scenes\" |_ }}</ion-label>\n          <ion-buttons><ion-button (click)=\"sendScenes()\"><ion-icon name=\"list\" slot=\"end\"></ion-icon>{{ \"Config.Backup.send\" |_ }}</ion-button></ion-buttons>\n        </ion-item>\n      </ion-list-group>\n    </ion-list>\n    `\n  })\n  export class ConfigGeneral {\n    showcomm: boolean = false;\n\n    constructor(protected system: System, private alertCtrl: AlertController) {\n    }\n\n    saveConfig() {\n      this.system.writeConfig();\n    }\n\n    async allowComm() {\n      // showcomm is toggle by the toggle button in the component\n      if (this.showcomm) {\n        const answer: any = await doAsk(this.alertCtrl, {\n          title: Translate('Config.EnableAdv', this.system),\n          message: Translate('Config.EnterPW', this.system),\n          inputs: [{name: 'Password'}],\n          buttons: [{text: 'OK'}]\n        });\n        // if the password is wrong, set 'showcomm' back to false\n        this.showcomm = (answer.Password === '2222');\n      }\n    }\n\n    async doRestore() {\n      const answer = await doAlert(this.alertCtrl, {\n        title: 'Replace settings',\n        message: 'Are you sure you want to replace all your settings with the last backup',\n        buttons: [\n          { text: 'No' },\n          { text: 'Yes', id: 'yes' }\n        ]\n      });\n\n      if (answer === 'yes')\n        this.system.doRestoreBackup();\n    }\n\n    async doRequestBackup() {\n      this.system.doRequestBackup();\n    }\n\n    async doBackup() {\n      this.system.doBackup();\n    }\n\n    async sendScenes() {\n      this.system.sendScenes();\n    }\n\n  }\n","import { Component } from '@angular/core';\nimport { System } from 'src/app/system/system';\nimport { doAlert } from 'src/app/core/stdUX';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'config-groups',\n  template: `\n    <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"reorderGroups($event)\" class=\"groups\">\n      <ion-item lines=\"none\" *ngFor=\"let group of system.groups; let inx = index\">\n        <ion-label position=\"stacked\">Group {{inx+1}}</ion-label>\n        <ion-buttons slot=\"end\" *ngIf=\"system.groups.length > 1\">\n          <ion-button (click)=\"tryDelete(group)\" color=\"primary\">\n            <ion-icon name=\"trash\"></ion-icon>\n          </ion-button>\n          <ion-reorder></ion-reorder>\n        </ion-buttons>\n        <ion-input type=\"text\" name=\"group{{inx+1}}\" [(ngModel)]=\"group.name\" (ionBlur)=\"saveGroups()\"></ion-input>\n      </ion-item>\n    </ion-reorder-group>\n  `\n})\nexport class ConfigGroupsComponent {\n\n  constructor(protected system: System,\n              private alertCtrl: AlertController) {}\n\n  saveGroups() {\n    this.system.writeGroups();\n  }\n\n  reorderGroups(event) {\n    this.system.groups[event.detail.from].order = event.detail.to;\n    this.system.groups[event.detail.to].order = event.detail.from;\n    this.system.groups.sort((a, b) => a.order - b.order);\n    event.detail.complete();\n    this.saveGroups();\n  }\n\n  async tryDelete(group) {\n    if (this.system.groups.length > 1) {\n      const answer = await doAlert(this.alertCtrl, {\n        title: 'Delete group',\n        message: 'Are you sure you want to delete the group \\'' + group.name + '\\'',\n        buttons: [\n          { text: 'No' },\n          { text: 'Yes', id: 'delete' }\n        ]\n      });\n      if (answer === 'delete') {\n        this.system.deleteGroup(group);\n      }\n    }\n  }\n\n}\n","export default \"ion-item-group ion-item:not(:last-child) {\\n  margin-bottom: 4px; }\\n\\nion-item-group ion-item:last-child {\\n  margin-bottom: 24px; }\\n\\n.non-active {\\n  color: var(--ion-color-medium); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2hhbi9MaWJyYXJ5L01vYmlsZSBEb2N1bWVudHMvY29tfmFwcGxlfkNsb3VkRG9jcy9Qcm9qZWN0cy9EdW90ZWNuby9zbWFydHN5c3RlbS9zcmMvYXBwL3RhYnMvY29uZmlnL2NvbmZpZy5tYXN0ZXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHWSxrQkFBa0IsRUFBQTs7QUFIOUI7RUFNWSxtQkFBbUIsRUFBQTs7QUFLL0I7RUFDSSw4QkFBOEIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RhYnMvY29uZmlnL2NvbmZpZy5tYXN0ZXJzLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbS1ncm91cCB7XG4gICAgaW9uLWl0ZW0ge1xuICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuICAgICAgICB9XG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG4ubm9uLWFjdGl2ZSB7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\n\nimport { Master } from 'src/app/system/master';\nimport { System } from 'src/app/system/system';\n\nimport { doAlert, doModal } from 'src/app/core/stdUX';\n\nimport { EditNode } from './edit.node';\nimport { EditMasterComponent } from './edit.master';\n\n\n@Component({\n  selector: 'config-masters',\n  template: `\n    <ion-list>\n      <ion-item-group *ngFor=\"let master of system.masters; let inx=index\">\n        <ion-item lines=\"none\">\n          <ion-icon name=\"code-working\" slot=\"start\"></ion-icon>\n          <span [class.non-active]=\"!master.config.active\">{{master.getAddress()}}<br>{{master.config.name}}</span>\n          <ion-buttons slot=\"end\">\n            <ion-button (click)=\"editMaster(master)\" color=\"primary\">\n              <ion-icon name=\"create\"></ion-icon>\n            </ion-button>\n            <ion-button (click)=\"deleteMaster(master)\" color=\"danger\">\n              <ion-icon name=\"trash\"></ion-icon>\n            </ion-button>\n          </ion-buttons>\n        </ion-item>\n\n        <ion-item lines=\"none\" *ngIf=\"master.config.active\">\n          <ion-label>Schedule {{master.schedule}}</ion-label>\n          <ion-select [(ngModel)]=\"master.schedule\" name=\"schedule{{inx}}\" (ionChange)=\"changeSchedule(master)\" \n                      interface=\"popover\" [compareWith]=\"sameSchedule\">\n            <ion-select-option value=\"0\">{{ \"Config.Week\" |_ }} 1</ion-select-option>\n            <ion-select-option value=\"1\">{{ \"Config.Week\" |_ }} 2</ion-select-option>\n            <ion-select-option value=\"2\">{{ \"Config.Week\" |_ }} 3</ion-select-option>\n            <ion-select-option value=\"3\">{{ \"Config.Holiday\" |_ }}</ion-select-option>\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\" *ngFor=\"let node of master.nodes\" (click)=\"editNode(node)\">\n          <ion-icon name=\"list\" slot=\"end\"></ion-icon>\n          {{node.getName()}} <span class=\"addr\">({{node.getNumber()}}, {{node.units.length}}/{{node.nrUnits}})</span>\n        </ion-item>\n      </ion-item-group>\n    </ion-list>\n  `,\n  styleUrls: ['config.masters.scss']\n})\nexport class ConfigMastersComponent {\n\n  constructor(private system: System,\n              private modalCtl: ModalController,\n              private alertCtrl: AlertController) {}\n\n\n  //////////////////\n  // Master Stuff //\n  //////////////////\n  async editMaster(master: Master) {\n    const data = await doModal(this.modalCtl, EditMasterComponent, { masterConfig: master.config });\n\n    if (data.masterConfig) {\n      try {\n        this.system.addMaster(data.masterConfig);\n      } catch (err) {\n        await doAlert(this.alertCtrl, {\n          title: 'Received error from master node',\n          message: err.toString(),\n          buttons: [{ text: 'OK' }]\n        })\n      }\n    }\n  }\n\n  async deleteMaster(master: Master) {\n    const answer = await doAlert(this.alertCtrl, {\n      title: 'Delete master node',\n      message: 'Are you sure you want to delete this master \"' + master.config.name + '\" (' + master.config.address + ')',\n      buttons: [\n        { text: 'No' },\n        { text: 'Yes', id: 'delete' }\n      ]\n    });\n    if (answer === 'delete') {\n      this.system.deleteMaster(master);\n      console.log('nr of masters: ' + this.system.masters.length);\n    }\n  }\n\n  sameSchedule(a,b): boolean {\n    return (a*1 == b*1);\n  }\n\n  changeSchedule(master: Master) {\n    console.log(\"changeSchedule -> \" + master.schedule + \" (\" + (typeof master.schedule) + \")\");\n    master.setSchedule();\n  }\n\n  ////////////////\n  // Node Stuff //\n  ////////////////\n  async editNode(node) {\n    await doModal(this.modalCtl, EditNode, { node: node });\n\n    this.system.updateSystem(true);\n    node.master.requestNodeStatus(node);\n  }\n\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../../core/core.module';\n\nimport { ConfigPage } from './config';\nimport { ConfigMastersComponent } from './config.masters';\nimport { EditMasterComponent } from './edit.master';\nimport { EditNode } from './edit.node';\nimport { ConfigGeneral } from './config.general';\nimport { ConfigGroupsComponent } from './config.groups';\nimport { ConfigScenes } from './config.scenes';\nimport { EditScene } from './edit.scene';\nimport { SelectTrigger } from './select.trigger';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    CoreModule,\n    RouterModule.forChild([{ path: '', component: ConfigPage }])\n  ],\n  entryComponents: [ConfigPage, ConfigMastersComponent, ConfigGeneral, ConfigGroupsComponent, ConfigScenes,\n                    EditMasterComponent, EditNode, EditScene, SelectTrigger],\n  declarations: [ConfigPage, EditMasterComponent, EditNode, EditScene, ConfigMastersComponent, ConfigGeneral, ConfigGroupsComponent, ConfigScenes, SelectTrigger],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class ConfigPageModule {}\n","import { Component } from '@angular/core';\nimport { System } from 'src/app/system/system';\nimport { SceneConfig } from 'src/app/system/types';\nimport { doModal } from 'src/app/core/stdUX';\nimport { ModalController } from '@ionic/angular';\nimport { EditScene } from './edit.scene';\n\n@Component({\n  selector: 'config-scenes',\n  template: `\n    <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"reorderGroups($event)\">\n      <ion-item lines=\"none\" *ngFor=\"let scene of system.scenes; let inx = index;\">\n        <ion-label (click)=\"editScene(scene)\">{{ scene.name }}</ion-label>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"editScene(scene, inx)\" color=\"primary\">\n            <ion-icon name=\"create\"></ion-icon>\n          </ion-button>\n          <ion-reorder *ngIf=\"system.scenes.length > 1\"></ion-reorder>\n        </ion-buttons>\n      </ion-item>\n    </ion-reorder-group>\n  `\n})\nexport class ConfigScenes {\n\n  constructor(protected system: System,\n              private modalCtl: ModalController) {\n  }\n\n  editScene(scene: SceneConfig, inx: number) {\n    this.showEditScene(scene, inx);\n  }\n\n\n  async showEditScene(scene: SceneConfig, inx: number) {\n    const data = await doModal(this.modalCtl, EditScene, {scene});\n\n    if (data.trigger) {\n      console.log(\"result from editscene: \", data);\n\n      if (data.order === -1) {\n        // delete request\n        this.system.scenes.splice(inx, 1);\n\n      } else {\n        // save the edits\n        this.system.scenes[inx] = data;\n      }\n      this.system.writeScenes();\n    }\n  }\n\n  ////////////\n  // Events //\n  ////////////\n  reorderGroups(event) {\n    this.system.scenes[event.detail.from].order = event.detail.to;\n    this.system.scenes[event.detail.to].order = event.detail.from;\n    this.system.scenes.sort((a, b) => a.order - b.order);\n    event.detail.complete();\n    this.system.writeScenes();\n  }\n\n}\n","export default \".version {\\n  margin-left: 4px;\\n  font-size: 0.8rem;\\n  color: grey; }\\n\\n/* segment */\\n\\nion-segment {\\n  margin-bottom: 16px; }\\n\\n.ios ion-segment-button {\\n  --padding-top: 5px;\\n  --indicator-color: #fff; }\\n\\n.md ion-segment-button {\\n  --background-checked: #fff; }\\n\\n@media (prefers-color-scheme: dark) {\\n  .ios ion-segment-button {\\n    --indicator-color: #595959; }\\n  .md ion-segment-button {\\n    --background-checked: var(--ion-color-step-100); } }\\n\\nion-toolbar ion-title {\\n  margin-right: -73px;\\n  margin-left: inherit; }\\n\\nion-toolbar .config-adder {\\n  width: 100px;\\n  margin-top: 4px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2hhbi9MaWJyYXJ5L01vYmlsZSBEb2N1bWVudHMvY29tfmFwcGxlfkNsb3VkRG9jcy9Qcm9qZWN0cy9EdW90ZWNuby9zbWFydHN5c3RlbS9zcmMvYXBwL3RhYnMvY29uZmlnL2NvbmZpZy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixXQUNKLEVBQUE7O0FBRUEsWUFBQTs7QUFDQTtFQUNJLG1CQUFtQixFQUFBOztBQUV2QjtFQUVRLGtCQUFjO0VBQ2QsdUJBQWtCLEVBQUE7O0FBRzFCO0VBRVEsMEJBQXFCLEVBQUE7O0FBRzdCO0VBQ0k7SUFFUSwwQkFBa0IsRUFBQTtFQUcxQjtJQUVRLCtDQUFxQixFQUFBLEVBQ3hCOztBQUlUO0VBRVEsbUJBQW1CO0VBQ25CLG9CQUFvQixFQUFBOztBQUg1QjtFQU1RLFlBQVk7RUFDWixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC90YWJzL2NvbmZpZy9jb25maWcuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52ZXJzaW9uIHtcbiAgICBtYXJnaW4tbGVmdDogNHB4O1xuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgIGNvbG9yOiBncmV5XG59XG5cbi8qIHNlZ21lbnQgKi9cbmlvbi1zZWdtZW50IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xufVxuLmlvcyB7XG4gICAgaW9uLXNlZ21lbnQtYnV0dG9uIHtcbiAgICAgICAgLS1wYWRkaW5nLXRvcDogNXB4O1xuICAgICAgICAtLWluZGljYXRvci1jb2xvcjogI2ZmZjtcbiAgICB9XG59XG4ubWQge1xuICAgIGlvbi1zZWdtZW50LWJ1dHRvbiB7XG4gICAgICAgIC0tYmFja2dyb3VuZC1jaGVja2VkOiAjZmZmO1xuICAgIH1cbn1cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcbiAgICAuaW9zIHtcbiAgICAgICAgaW9uLXNlZ21lbnQtYnV0dG9uIHtcbiAgICAgICAgICAgIC0taW5kaWNhdG9yLWNvbG9yOiAjNTk1OTU5O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5tZCB7XG4gICAgICAgIGlvbi1zZWdtZW50LWJ1dHRvbiB7XG4gICAgICAgICAgICAtLWJhY2tncm91bmQtY2hlY2tlZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMTAwKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuaW9uLXRvb2xiYXIge1xuICAgIGlvbi10aXRsZSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogLTczcHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBpbmhlcml0O1xuICAgIH1cbiAgICAuY29uZmlnLWFkZGVyIHtcbiAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgfVxufVxuXG4iXX0= */\"","import { Component } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\n\nimport { System } from '../../system/system';\nimport { kEmptyGroup, kEmptyScene } from '../../system/types';\nimport { doModal, doAlert } from 'src/app/core/stdUX';\nimport { EditMasterComponent } from './edit.master';\nimport { EditScene } from './edit.scene';\n\n@Component({\n  selector: 'page-config',\n  template: `\n  <ion-header>\n    <ion-toolbar>\n      <img slot=\"start\" src=\"/assets/icon/duotecno.png\" />\n      <ion-title>{{'Page.Config' |_ }}</ion-title>\n\n      <ion-buttons slot=\"end\" class=\"config-adder\">\n        <ion-button (click)=\"addGroup()\" *ngIf=\"what === 'groups'\">\n          <ion-icon name=\"add\"></ion-icon> {{\"Config.Group\" |_ }}\n        </ion-button>\n\n        <ion-button (click)=\"addMaster()\" *ngIf=\"what === 'masters'\">\n          <ion-icon name=\"add\"></ion-icon> {{\"Config.Master\" |_ }}\n        </ion-button>\n\n        <ion-button (click)=\"addScene()\" *ngIf=\"what === 'scenes'\">\n          <ion-icon name=\"add\"></ion-icon> {{\"Config.Scenes.scene\" |_ }}\n        </ion-button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class=\"ion-padding\">\n    <ion-segment [(ngModel)]=\"what\">\n      <ion-segment-button value=\"general\">\n        <ion-icon name=\"settings-outline\"></ion-icon>\n        <ion-label>{{ \"Config.General\" |_ }}</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"groups\">\n        <ion-icon name=\"folder\"></ion-icon>\n        <ion-label>{{ \"Config.Groups\" |_ }}</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"masters\">\n        <ion-icon name=\"code-working\"></ion-icon>\n        <ion-label>{{ \"Config.Masters\" |_ }}</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"scenes\">\n        <ion-icon name=\"list\"></ion-icon>\n        <ion-label>{{ \"Config.Scenes\" |_ }}</ion-label>\n      </ion-segment-button>\n    </ion-segment>\n\n    <config-general *ngIf=\"what === 'general'\"></config-general>\n    <config-groups  *ngIf=\"what === 'groups'\"></config-groups>\n    <config-scenes  *ngIf=\"what === 'scenes'\"></config-scenes>\n    <config-masters *ngIf=\"what === 'masters'\"></config-masters>\n\n    <p class=\"version\"> v2.0.0b1 © Johan Coppieters &amp; Duotecno</p>\n  </ion-content>\n  `,\n  styleUrls: ['config.scss']\n})\nexport class ConfigPage {\n\n  what: string;\n\n  constructor(private modalCtl: ModalController,\n              private alertCtrl: AlertController,\n              private system: System) {\n\n    this.what = (this.system.masters.length <= 0) ? 'masters' : 'general';\n  }\n\n  /////////////\n  // Masters //\n  /////////////\n  async addMaster() {\n    const data = await doModal(this.modalCtl, EditMasterComponent, {});\n\n    if (data.masterConfig) {\n      try {\n        this.system.addMaster(data.masterConfig);\n      } catch (err) {\n        await doAlert(this.alertCtrl, {\n          title: 'Received error from master node',\n          message: err.toString(),\n          buttons: [{ text: 'OK' }]\n        });\n      }\n    }\n  }\n\n\n  ////////////\n  // Groups //\n  ////////////\n  addGroup() {\n    // find max id\n    const max = this.system.groups.reduce((m, g) => (g.id > m) ? g.id : m, this.system.groups[0].id);\n    this.system.groups.push({...kEmptyGroup, id: max + 1});\n  }\n\n\n  ////////////\n  // Scenes //\n  ////////////\n  async addScene() {\n    const scene = {...kEmptyScene };\n    this.system.scenes.push(scene);\n    const data = await doModal(this.modalCtl, EditScene, {scene});\n    this.system.writeScenes();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MasterConfig, Sanitizers } from '../../system/types';\nimport { NavParams, ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'edit-master',\n  template: `\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>{{ \"Config.Master\" |_ }}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class=\"ion-padding\">\n    <ion-list>\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">External IP or URL</ion-label>\n        <ion-input type=\"text\" name=\"address\" [(ngModel)]=\"masterConfig.address\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">Port</ion-label>\n        <ion-input type=\"text\" name=\"port\" [(ngModel)]=\"masterConfig.port\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">Password</ion-label>\n        <ion-input type=\"password\" name=\"password\" [(ngModel)]=\"masterConfig.password\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">Name</ion-label>\n        <ion-input type=\"text\" name=\"name\" [(ngModel)]=\"masterConfig.name\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label>Active</ion-label>\n        <ion-toggle name=\"active\" [(ngModel)]=\"masterConfig.active\"></ion-toggle>\n      </ion-item>\n    </ion-list>\n  </ion-content>\n\n  <ion-footer class=\"ion-padding\">\n    <ion-buttons>\n      <ion-button (click)=\"save()\" fill=\"solid\" color=\"primary\">{{\"General.Save\" |_ }}</ion-button>\n      <ion-button (click)=\"cancel()\" fill=\"outline\" color=\"primary\">{{\"General.Cancel\" |_ }}</ion-button>\n    </ion-buttons>\n  </ion-footer>\n  `\n})\nexport class EditMasterComponent implements OnInit {\n  masterConfig: MasterConfig;\n\n  constructor(private modalCtrl: ModalController,\n              private navParams: NavParams) {\n  }\n\n  ngOnInit() {\n    this.masterConfig = this.navParams.get('masterConfig') || Sanitizers.masterConfig();\n  }\n\n  save() {\n    this.modalCtrl.dismiss({masterConfig: this.masterConfig});\n  }\n\n  cancel() {\n    this.modalCtrl.dismiss({});\n  }\n\n}\n","export default \".select-text {\\n  font-size: 1.2rem;\\n  color: grey; }\\n\\n.select-ios .select-icon .select-icon-inner {\\n  margin-top: -4px; }\\n\\n.item-select .label {\\n  color: #000; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2hhbi9MaWJyYXJ5L01vYmlsZSBEb2N1bWVudHMvY29tfmFwcGxlfkNsb3VkRG9jcy9Qcm9qZWN0cy9EdW90ZWNuby9zbWFydHN5c3RlbS9zcmMvYXBwL3RhYnMvY29uZmlnL2VkaXQubm9kZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCO0VBQ2pCLFdBQVcsRUFBQTs7QUFFZjtFQUNJLGdCQUFnQixFQUFBOztBQUVwQjtFQUNJLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RhYnMvY29uZmlnL2VkaXQubm9kZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdC10ZXh0IHtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICBjb2xvcjogZ3JleTtcbn1cbi5zZWxlY3QtaW9zIC5zZWxlY3QtaWNvbiAuc2VsZWN0LWljb24taW5uZXIge1xuICAgIG1hcmdpbi10b3A6IC00cHg7XG59XG4uaXRlbS1zZWxlY3QgLmxhYmVsIHtcbiAgICBjb2xvcjogIzAwMDtcbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { System } from '../../system/system';\nimport { Node } from '../../system/protocol';\n\n@Component({\n  selector: 'edit-node',\n  styleUrls: ['edit.node.scss'],\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>{{ \"Node.of\" |_ }} {{node.getName()}}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-list>\n        <ion-item *ngFor=\"let unit of node.units\" lines=\"none\">\n          <ion-label>{{unit.getName()}}<br/>\n            <span class=\"type\">{{unit.typeName()}}</span>\n            <span class=\"addr\">({{unit.getNumber()}})</span>\n          </ion-label>\n          <ion-checkbox slot=\"start\" [(ngModel)]=\"unit.active\" color=\"secondary\" [disabled]=\"unit.name[0]==','\"></ion-checkbox>\n          <ion-select *ngIf=\"system.groups.length > 1\" [(ngModel)]=\"unit.group\" [compareWith]=\"sameGroup\"\n                      interface=\"popover\" [interfaceOptions]=\"{title: unit.getName()}\">\n            <ion-select-option *ngFor=\"let group of system.groups\" value=\"{{group.id}}\">{{group.name}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n      </ion-list>\n    </ion-content>\n\n    <ion-footer class=\"ion-padding\">\n      <ion-buttons>\n        <ion-button (click)=\"done()\" expand=\"block\">{{ \"General.Done\" |_ }}</ion-button>\n      </ion-buttons>\n    </ion-footer>\n  `\n})\nexport class EditNode implements OnInit {\n  node: Node;\n\n  constructor(protected modalCtrl: ModalController, \n              protected navParams: NavParams, \n              protected system: System) {\n  }\n\n  ngOnInit() {\n    this.node = <Node> this.navParams.get('node');\n\n    if ((! this.node.active) || (this.node.nrUnits !== this.node.units.length)) {\n      this.node.master.fetchAllUnits(this.node);\n    }\n  }\n\n  sameGroup(a,b): boolean {\n    return a*1 == b*1;\n  }\n\n  done() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ModalController, NavParams, AlertController } from '@ionic/angular';\nimport { System } from '../../system/system';\nimport { SceneConfig, Sanitizers } from 'src/app/system/types';\nimport { doModal, doAlert } from 'src/app/core/stdUX';\nimport { SelectTrigger } from './select.trigger';\n\n@Component({\n  selector: 'edit-scene',\n  styles: ['ion-label.triggerName { text-align: right; margin-right: 8px }',\n           'span.typeAndAddr { font-size: 0.9rem; color: var(--ion-color-medium) }',\n           'ion-button.delete { float: right; display: inline-block }',\n           'ion-buttons { display: inline }',\n           'ion-input[type=number] { text-align: right; width: 50px }'],\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>{{ \"Config.Scenes.for\" |_ }} {{scene.name}}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-list>\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">{{ \"Config.Scenes.name\" |_ }}</ion-label>\n          <ion-input type=\"text\" name=\"name\" [(ngModel)]=\"scene.name\"></ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Scenes.triggeredBy\" |_ }}:</ion-label>\n          <ion-label class=\"triggerName\" (click)=\"selectTrigger(scene)\">{{ triggerName }}</ion-label>\n          <ion-icon name=\"create-outline\" (click)=\"selectTrigger(scene)\"></ion-icon>\n        </ion-item>\n\n        <ion-item *ngFor=\"let unit of system.controls; let inx = index;\">\n          <ion-label>{{unit.getName()}}<br/>\n            <span class=\"typeAndAddr\">{{unit.typeName()}} ({{unit.getNumber()}})</span>\n          </ion-label>\n          <ion-checkbox slot=\"start\" [(ngModel)]=\"selection[inx]\" color=\"secondary\"></ion-checkbox>\n          <ion-toggle *ngIf=\"unit.isSwitch()\" slot=\"end\" [(ngModel)]=\"values[inx]\" (ionBlur)=\"changeS(inx)\"></ion-toggle>\n          <ion-input *ngIf=\"unit.isDimmer()\" slot=\"end\" type=\"number\" [(ngModel)]=\"values[inx]\" (ionBlur)=\"changeD(inx)\"></ion-input>\n        </ion-item>\n      </ion-list>\n    </ion-content>\n\n    <ion-footer class=\"ion-padding\">\n      <ion-buttons>\n        <ion-button (click)=\"done()\" color=\"secondary\">{{ \"General.Done\" |_ }}</ion-button>\n        <ion-button (click)=\"cancel()\" color=\"primary\">{{ \"General.Cancel\" |_ }}</ion-button>\n        <ion-button (click)=\"delete()\" class=\"delete\" color=\"primary\"><ion-icon name=\"trash\"></ion-icon>{{ \"General.Delete\" |_ }}</ion-button>\n      </ion-buttons>\n    </ion-footer>\n  `\n})\nexport class EditScene {\n  scene: SceneConfig;\n  selection: boolean[];\n  values: number[];\n  triggerName: string; \n\n  // select units + values\n  // select unit (mood or input)\n\n  constructor(protected modalCtrl: ModalController,\n              private alertCtrl: AlertController,\n              protected system: System,\n              private navParams: NavParams) {\n  }\n\n  ngOnInit() {\n    this.scene = Sanitizers.sceneConfig(this.navParams.get('scene'));\n\n    // which controls are used within this scene and what is the desired value\n    this.selection = [];\n    this.values = [];\n    this.system.controls.forEach(c => {\n      const unit = this.scene.units.find(u => c.isUnit(u.masterAddress, u.masterPort, u.logicalNodeAddress, u.logicalAddress));\n      this.selection.push(!! unit);\n      if (unit) console.log(unit.logicalAddress + \" = \" + unit.value); else console.log(\"----\");\n      this.values.push( (unit) ? <number> unit.value : 0);\n    });\n\n    // find the name of the trigger\n    this.triggerName = this.getTriggerName();\n    \n\n    console.log('EditScene:', this.scene, ', selection: ', this.selection, ', values: ', this.values);\n  }\n\n  getTriggerName(): string {\n    if (this.scene.trigger.masterAddress) {\n      const master = this.system.findMaster(this.scene.trigger.masterAddress, this.scene.trigger.masterPort);\n      if (master) {\n        const unit = master.findUnit(this.scene.trigger.logicalNodeAddress, this.scene.trigger.logicalAddress);\n        return unit.getName();\n      }\n    }\n    return \"-\";\n  }\n\n\n  async selectTrigger(scene: SceneConfig) {\n    const data = await doModal(this.modalCtrl, SelectTrigger, {trigger: scene.trigger, name: this.scene.name});\n\n    if (data.masterAddress) {\n      console.log(\"result select trigger: \", data);\n      this.scene.trigger = data;\n      this.triggerName = this.getTriggerName();\n    }\n  }\n\n  ////////////\n  // Events //\n  ////////////\n\n  changeD(inx) {\n    console.log(\"changed dimmer: \" + inx + \" -> \" + this.values[inx]);\n    if (this.values[inx] < 0) this.values[inx] = 0;\n    if (this.values[inx] > 100) this.values[inx] = 100;\n  }\n\n  changeS(inx) {\n    console.log(\"changed switch: \" + inx + \" -> \" + this.values[inx]);\n  }\n\n  done() {\n    // reconstruct the array with selected units (and their values)\n    this.scene.units = [];\n    this.system.controls.forEach((u,i) => {\n      if (this.selection[i]) {\n        this.scene.units.push(\n          Sanitizers.unitScene({masterAddress: u.node.master.getAddress(), masterPort: u.node.master.getPort(), \n            logicalNodeAddress: u.node.logicalAddress, logicalAddress: u.logicalAddress,\n            value: this.values[i]})\n        );\n      }\n    });\n    this.modalCtrl.dismiss(this.scene);\n    this.system.triggerRebuild(true);\n  }\n  cancel() {\n    this.modalCtrl.dismiss();\n  }\n  async delete() {\n    const answer = await doAlert(this.alertCtrl, {\n      title: 'Delete scene',\n      message: 'Are you sure you want to delete the scene \"' + this.scene.name + '\" ?',\n      buttons: [\n        { text: 'No' },\n        { text: 'Yes', id: 'delete' }\n      ]\n    });\n    if (answer === 'delete') {\n      this.scene.order = -1; // signal delete\n      this.modalCtrl.dismiss();\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { System } from '../../system/system';\nimport { Sanitizers, UnitScene } from 'src/app/system/types';\nimport { UnitType } from 'src/app/system/protocol';\n\n@Component({\n  selector: 'select-trigger',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>{{ \"Config.Scenes.selectTriggerFor\" |_ }} {{sceneName}}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-item>\n        <ion-label>\n          {{ \"Config.Scenes.trigger\" |_ }}\n        </ion-label>\n        <ion-select [(ngModel)]=\"curType\" [compareWith]=\"sameMode\"\n                    okText=\"{{ 'General.Done' |_ }}\" cancelText=\"{{ 'General.Cancel' |_ }}\">\n          <ion-select-option value=\"0\">{{ \"scene.trigger.off\" |_ }}</ion-select-option>\n          <ion-select-option value=\"1\">{{ \"scene.trigger.on\" |_ }}</ion-select-option>\n          <ion-select-option value=\"2\">{{ \"scene.trigger.long\" |_ }}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-radio-group [(ngModel)]=\"curUnit\">\n        <ion-item *ngFor=\"let unit of system.moods; let inx = index;\" lines=\"none\">\n          <ion-label>\n            {{unit.getName()}} - <span class=\"addr\">({{unit.getNumber()}})</span>\n          </ion-label>\n          <ion-radio slot=\"start\" color=\"secondary\" value=\"U{{inx}}\"></ion-radio>\n        </ion-item>\n      </ion-radio-group>\n    </ion-content>\n\n    <ion-footer class=\"ion-padding\">\n      <ion-buttons>\n        <ion-button (click)=\"done()\" color=\"secondary\">{{ \"General.Done\" |_ }}</ion-button>\n        <ion-button (click)=\"cancel()\" color=\"primary\">{{ \"General.Cancel\" |_ }}</ion-button>\n      </ion-buttons>\n    </ion-footer>\n  `\n})\nexport class SelectTrigger {\n  sceneName: string = \"\";\n  trigger: UnitScene;\n  curType = UnitType.kNoType;\n  curUnit: string;\n\n  // select units + values\n  // select unit (mood or input)\n\n  constructor(protected modalCtrl: ModalController,\n              protected system: System,\n              private navParams: NavParams) {\n  }\n\n  ngOnInit() {\n    this.sceneName = this.navParams.get('name') || \"\";\n    this.trigger = Sanitizers.unitScene(this.navParams.get('trigger'));\n    this.curUnit = \"U\" + this.system.moods.findIndex(mood => mood.isUnit(\n      this.trigger.masterAddress, this.trigger.masterPort, \n      this.trigger.logicalNodeAddress, this.trigger.logicalAddress\n    ));\n    this.curType = <UnitType> this.trigger.value;\n    console.log('SelectTrigger:' + this.curUnit + ', trigger type: ' + this.curType);\n  }\n\n  done() {\n    if (! this.curUnit) this.modalCtrl.dismiss();\n    const unit = this.system.moods[parseInt(this.curUnit.substr(1))];\n    if (! unit) this.modalCtrl.dismiss();\n\n    this.modalCtrl.dismiss(Sanitizers.unitScene({\n      logicalNodeAddress: unit.logicalNodeAddress,\n      logicalAddress: unit.logicalAddress,\n      masterAddress: unit.node.master.getAddress(),\n      masterPort: unit.node.master.getPort(),\n      value: this.curType\n    }));\n  }\n\n  cancel() {\n    this.modalCtrl.dismiss();\n  }\n  sameMode(a,b): boolean {\n    return a*1 == b*1;\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { StdPage } from '../../core/stdpage';\nimport { System } from '../../system/system';\n\n@Component({\n  selector: 'page-control',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-menu-toggle slot=\"start\">\n          <img src=\"/assets/icon/duotecno.png\" />\n          <ion-icon name=\"{{ system.isSplitted ? '' : 'menu'}}\"></ion-icon>\n        </ion-menu-toggle>\n        <ion-title>{{ \"Page.Control\" |_ }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <std-page services=\"controls\" [showUpDowns]=\"! this.system.config.stores\"></std-page>\n    </ion-content>\n  `,\n  styles: [':root .noMaster { text-align: center }']\n})\n\nexport class ControlPage {\n  @ViewChild(StdPage, {static: true}) stdPage: StdPage;\n\n  constructor(protected system: System) {}\n\n  ionViewWillEnter() {\n    this.stdPage.refreshServices();\n  }\n\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { StdPage } from 'src/app/core/stdpage';\nimport { System } from 'src/app/system/system';\n\n@Component({\n  selector: 'page-moods',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-menu-toggle slot=\"start\">\n          <img src=\"/assets/icon/duotecno.png\" />\n          <ion-icon name=\"{{ system.isSplitted ? '' : 'menu'}}\"></ion-icon>\n        </ion-menu-toggle>\n        <ion-title>{{ \"Page.Moods\" |_ }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <std-page services=\"moods\"></std-page>\n    </ion-content>\n  `\n})\nexport class MoodsPage {\n  @ViewChild(StdPage, {static: false}) stdPage: StdPage;\n\n  constructor(protected system: System) {}\n\n  ionViewWillEnter() {\n    this.stdPage.refreshServices();\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { StdPage } from '../../core/stdpage';\nimport { System } from '../../system/system';\n\n@Component({\n  selector: 'page-stores',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-menu-toggle slot=\"start\">\n          <img src=\"/assets/icon/duotecno.png\" />\n          <ion-icon name=\"{{ system.isSplitted ? '' : 'menu'}}\"></ion-icon>\n        </ion-menu-toggle>\n        <ion-title>{{ \"Page.Stores\" |_ }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <std-page services=\"stores\" [showUpDowns]=\"true\"></std-page>\n    </ion-content>\n  `\n})\nexport class StoresPage {\n  @ViewChild(StdPage, {static: true}) stdPage: StdPage;\n\n  constructor(protected system: System) {}\n\n  ionViewWillEnter() {\n    this.stdPage.refreshServices();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\nimport { ControlPage } from '../control/control.page';\nimport { TemperaturePage } from '../temperature/temperature.page';\nimport { StoresPage } from '../stores/stores.page';\nimport { MoodsPage } from '../moods/moods.page';\nimport { ConfigPage } from '../config/config';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {path: 'control', component: ControlPage },\n      { path: 'temperature', component: TemperaturePage },\n      { path: 'stores', component: StoresPage },\n      { path: 'moods', component: MoodsPage },\n      { path: 'config', component: ConfigPage },\n      { path: '', redirectTo: '/tabs/control', pathMatch: 'full' }\n    ]\n  },\n  { path: '', redirectTo: '/tabs/control', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs-routing.module';\n\nimport { TabsPage } from './tabs.page';\nimport { CoreModule } from 'src/app/core/core.module';\n\nimport { MoodsPage } from '../moods/moods.page';\nimport { StoresPage } from '../stores/stores.page';\nimport { TemperaturePage } from '../temperature/temperature.page';\nimport { ControlPage } from '../control/control.page';\nimport { ConfigPageModule } from '../config/config.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    CoreModule,\n    TabsPageRoutingModule,\n    ConfigPageModule\n  ],\n  declarations: [TabsPage, ControlPage, TemperaturePage, MoodsPage, StoresPage],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TabsPageModule {}\n","import { Component } from '@angular/core';\nimport { System } from 'src/app/system/system';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html'\n})\nexport class TabsPage {\n\n  constructor(protected system: System) {}\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { System } from '../../system/system';\nimport { StdPage } from '../../core/stdpage';\n\n@Component({\n  selector: 'page-temperature',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-menu-toggle slot=\"start\">\n          <img src=\"/assets/icon/duotecno.png\" />\n          <ion-icon name=\"{{ system.isSplitted ? '' : 'menu'}}\"></ion-icon>\n        </ion-menu-toggle>\n        <ion-title>{{ \"Page.Temperature\" |_ }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <std-page services=\"temperatures\"></std-page>\n    </ion-content>\n  `\n})\n\nexport class TemperaturePage {\n  @ViewChild(StdPage, {static: true}) stdPage: StdPage;\n\n  constructor(protected system: System) {}\n\n  ionViewWillEnter() {\n    this.stdPage.refreshServices();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"tabs-tabs-tabs-module-es5.js"}