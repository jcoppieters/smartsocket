{"version":3,"sources":["./src/app/tabs/tabs/tabs.page.html","./src/app/core/stdUX.ts","./src/app/tabs/config/config.general.ts","./src/app/tabs/config/config.groups.ts","./src/app/tabs/config/config.masters.scss","./src/app/tabs/config/config.masters.ts","./src/app/tabs/config/config.module.ts","./src/app/tabs/config/config.scenes.ts","./src/app/tabs/config/config.scss","./src/app/tabs/config/config.ts","./src/app/tabs/config/edit.master.ts","./src/app/tabs/config/edit.node.scss","./src/app/tabs/config/edit.node.ts","./src/app/tabs/config/edit.scene.ts","./src/app/tabs/config/select.trigger.ts","./src/app/tabs/control/control.page.ts","./src/app/tabs/moods/moods.page.ts","./src/app/tabs/stores/stores.page.ts","./src/app/tabs/tabs/tabs-routing.module.ts","./src/app/tabs/tabs/tabs.module.ts","./src/app/tabs/tabs/tabs.page.ts","./src/app/tabs/temperature/temperature.page.ts"],"names":[],"mappings":"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","file":"tabs-tabs-tabs-module-es2015.js","sourcesContent":["export default \"<ion-tabs>\\n\\n  <ion-tab-bar slot=\\\"bottom\\\">\\n    <ion-tab-button tab=\\\"control\\\">\\n      <ion-icon src=\\\"/assets/icon/light.svg\\\"></ion-icon>\\n      <ion-label>{{'Page.Control' |_ }}</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"temperature\\\">\\n      <ion-icon src=\\\"/assets/icon/temperature.svg\\\"></ion-icon>\\n      <ion-label>{{'Page.Temperature' |_ }}</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"stores\\\" [ngClass]=\\\"!system.config.stores? 'ion-hide':''\\\">\\n      <ion-icon src=\\\"/assets/icon/stores.svg\\\"></ion-icon>\\n      <ion-label>{{'Page.Stores' |_ }}</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"moods\\\">\\n      <ion-icon name=\\\"list\\\"></ion-icon>\\n      <ion-label>{{'Page.Moods' |_ }}</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"config\\\">\\n      <ion-icon name=\\\"settings-outline\\\"></ion-icon>\\n      <ion-label>{{'Page.Config' |_ }}</ion-label>\\n    </ion-tab-button>\\n  </ion-tab-bar>\\n\\n</ion-tabs>\\n\"","import { AlertController, ModalController } from '@ionic/angular';\n\nexport function doAlert(alertCtrl: AlertController, options): Promise<string> {\n  return new Promise(async (resolve, reject) => {\n    const buttons = options.buttons.map(b => {\n      return {text: b.text, \n              handler: () => resolve(b.id)};\n    });\n    const alert = await alertCtrl.create({\n      header: 'Duotecno',\n      subHeader: options.title,\n      message: options.message,\n      buttons\n    });\n    await alert.present();\n  });\n}\n\nexport function doAsk(alertCtrl: AlertController, options): Promise<object> {\n  return new Promise(async (resolve, reject) => {\n    const buttons = options.buttons.map(b => {\n      return {text: b.text, \n              handler: (data) => { b.handler && b.handler(data); resolve(data); }};\n    });\n    const alert = await alertCtrl.create({\n      header: 'Duotecno',\n      subHeader: options.title,\n      message: options.message,\n      buttons: buttons,\n      inputs: options.inputs\n    });\n    await alert.present();\n  });\n}\n\n\nexport async function doModal(modalCtl: ModalController,\n                              modalComponent: any, options) {\n  const modal = await modalCtl.create({ component: modalComponent,\n                                        componentProps: options });\n  await modal.present();\n  const { data } = await modal.onDidDismiss();\n  return data || {};\n}\n","import { Component } from '@angular/core';\nimport { System } from 'src/app/system/system';\nimport { AlertController } from '@ionic/angular';\nimport { doAsk, doAlert } from 'src/app/core/stdUX';\nimport { Translate } from 'src/app/core/translate.pipe';\n\n@Component({\n  selector: 'config-general',\n  template: `\n    <ion-list>\n      <ion-item-group>\n        <ion-item-divider>\n          <ion-label>\n            {{ \"Config.Settings\" |_ }}\n          </ion-label>\n        </ion-item-divider>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Language\" |_ }}</ion-label>\n          <ion-select name=\"language\" interface=\"popover\"\n                      [(ngModel)]=\"system.config.language\" (ionChange)=\"saveConfig()\">\n            <ion-select-option value=\"EN\">English</ion-select-option>\n            <ion-select-option value=\"NL\">Nederlands</ion-select-option>\n            <ion-select-option value=\"FR\">Français</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.SeparateStores\" |_ }}</ion-label>\n          <ion-toggle name=\"stores\" [(ngModel)]=\"system.config.stores\" (ionChange)=\"saveConfig()\"></ion-toggle>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.MultipleGroups\" |_ }}</ion-label>\n          <ion-toggle name=\"multiple\" [(ngModel)]=\"system.config.multiple\" (ionChange)=\"saveConfig()\"></ion-toggle>\n        </ion-item>\n      </ion-item-group>\n\n      <ion-list-group>\n        <ion-item-divider>\n          <ion-label>\n            {{ \"Config.Communication\" |_ }} <span class=\"comm\">({{ system.config.socketserver }})</span>\n          </ion-label>\n        </ion-item-divider>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Advanced\" |_ }}</ion-label>\n          <ion-toggle name=\"communication\" [(ngModel)]=\"showcomm\" (ionChange)=\"allowComm()\"></ion-toggle>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"showcomm\">\n          <ion-label position=\"stacked\">Socket server IP</ion-label>\n          <ion-input name=\"socketserver\" type=\"text\" [(ngModel)]=\"system.config.socketserver\" (ionBlur)=\"saveConfig()\"></ion-input>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"showcomm\">\n          <ion-label position=\"stacked\">Socket server port</ion-label>\n          <ion-input name=\"socketport\" type=\"text\" [(ngModel)]=\"system.config.socketport\" (ionBlur)=\"saveConfig()\"></ion-input>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"showcomm\">\n          <ion-label position=\"stacked\">Remote Scenes</ion-label>\n          <ion-toggle name=\"remotescenes\" [(ngModel)]=\"system.config.remotescenes\" (ionChange)=\"saveConfig()\"></ion-toggle>\n        </ion-item>\n      </ion-list-group>\n\n      <ion-list-group>\n        <ion-item-divider>\n          <ion-label>\n            {{ \"Config.Backup\" |_ }}\n          </ion-label>\n        </ion-item-divider>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Backup.config\" |_ }}</ion-label>\n          <ion-buttons><ion-button (click)=\"doBackup()\"><ion-icon name=\"settings-outline\" slot=\"end\"></ion-icon>{{ \"Config.Backup.send\" |_ }}</ion-button></ion-buttons>\n        </ion-item>\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Backup.get\" |_ }}</ion-label>\n          <ion-buttons><ion-button (click)=\"doRequestBackup()\"><ion-icon name=\"settings-outline\" slot=\"end\"></ion-icon>{{ \"Config.Backup.fetch\" |_ }}</ion-button></ion-buttons>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"system.backup\">\n          <ion-label>{{ \"Config.Backup.restore\" |_ }}: \n            <small>{{ system.backup.config.cmasters.length }} {{ \"Config.Masters\" |_ }}, \n                    {{ system.backup.config.cunits.length }} {{ \"Config.Units\" |_ }}, \n                    {{ system.backup.groups.length }} {{ \"Config.Groups\" |_ }},\n                    {{ system.backup.scenes.length }} {{ \"Config.Scenes\" |_ }}</small>\n          </ion-label>\n          <ion-buttons>\n            <ion-button (click)=\"doRestore()\"><ion-icon name=\"settings-outline\" slot=\"end\"></ion-icon>{{ \"Config.Backup.replace\" |_ }}</ion-button>\n          </ion-buttons>\n        </ion-item>\n        <ion-item lines=\"none\" *ngIf=\"system.config.remotescenes\">\n          <ion-label>{{ \"Config.Backup.scenes\" |_ }}</ion-label>\n          <ion-buttons><ion-button (click)=\"sendScenes()\"><ion-icon name=\"list\" slot=\"end\"></ion-icon>{{ \"Config.Backup.send\" |_ }}</ion-button></ion-buttons>\n        </ion-item>\n      </ion-list-group>\n    </ion-list>\n    `\n  })\n  export class ConfigGeneral {\n    showcomm: boolean = false;\n\n    constructor(protected system: System, private alertCtrl: AlertController) {\n    }\n\n    saveConfig() {\n      this.system.writeConfig();\n    }\n\n    async allowComm() {\n      // showcomm is toggle by the toggle button in the component\n      if (this.showcomm) {\n        const answer: any = await doAsk(this.alertCtrl, {\n          title: Translate('Config.EnableAdv', this.system),\n          message: Translate('Config.EnterPW', this.system),\n          inputs: [{name: 'Password'}],\n          buttons: [{text: 'OK'}]\n        });\n        // if the password is wrong, set 'showcomm' back to false\n        this.showcomm = (answer.Password === '2222');\n      }\n    }\n\n    async doRestore() {\n      const answer = await doAlert(this.alertCtrl, {\n        title: 'Replace settings',\n        message: 'Are you sure you want to replace all your settings with the last backup',\n        buttons: [\n          { text: 'No' },\n          { text: 'Yes', id: 'yes' }\n        ]\n      });\n\n      if (answer === 'yes')\n        this.system.doRestoreBackup();\n    }\n\n    async doRequestBackup() {\n      this.system.doRequestBackup();\n    }\n\n    async doBackup() {\n      this.system.doBackup();\n    }\n\n    async sendScenes() {\n      this.system.sendScenes();\n    }\n\n  }\n","import { Component } from '@angular/core';\nimport { System } from 'src/app/system/system';\nimport { doAlert } from 'src/app/core/stdUX';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'config-groups',\n  template: `\n    <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"reorderGroups($event)\" class=\"groups\">\n      <ion-item lines=\"none\" *ngFor=\"let group of system.groups; let inx = index\">\n        <ion-label position=\"stacked\">Group {{inx+1}}</ion-label>\n        <ion-buttons slot=\"end\" *ngIf=\"system.groups.length > 1\">\n          <ion-button (click)=\"tryDelete(group)\" color=\"primary\">\n            <ion-icon name=\"trash\"></ion-icon>\n          </ion-button>\n          <ion-reorder></ion-reorder>\n        </ion-buttons>\n        <ion-input type=\"text\" name=\"group{{inx+1}}\" [(ngModel)]=\"group.name\" (ionBlur)=\"saveGroups()\"></ion-input>\n      </ion-item>\n    </ion-reorder-group>\n  `\n})\nexport class ConfigGroupsComponent {\n\n  constructor(protected system: System,\n              private alertCtrl: AlertController) {}\n\n  saveGroups() {\n    this.system.writeGroups();\n  }\n\n  reorderGroups(event) {\n    this.system.groups[event.detail.from].order = event.detail.to;\n    this.system.groups[event.detail.to].order = event.detail.from;\n    this.system.groups.sort((a, b) => a.order - b.order);\n    event.detail.complete();\n    this.saveGroups();\n  }\n\n  async tryDelete(group) {\n    if (this.system.groups.length > 1) {\n      const answer = await doAlert(this.alertCtrl, {\n        title: 'Delete group',\n        message: 'Are you sure you want to delete the group \\'' + group.name + '\\'',\n        buttons: [\n          { text: 'No' },\n          { text: 'Yes', id: 'delete' }\n        ]\n      });\n      if (answer === 'delete') {\n        this.system.deleteGroup(group);\n      }\n    }\n  }\n\n}\n","export default \"ion-item-group ion-item:not(:last-child) {\\n  margin-bottom: 4px; }\\n\\nion-item-group ion-item:last-child {\\n  margin-bottom: 24px; }\\n\\n.non-active {\\n  color: var(--ion-color-medium); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2hhbi9MaWJyYXJ5L01vYmlsZSBEb2N1bWVudHMvY29tfmFwcGxlfkNsb3VkRG9jcy9Qcm9qZWN0cy9EdW90ZWNuby9zbWFydHN5c3RlbS9zcmMvYXBwL3RhYnMvY29uZmlnL2NvbmZpZy5tYXN0ZXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHWSxrQkFBa0IsRUFBQTs7QUFIOUI7RUFNWSxtQkFBbUIsRUFBQTs7QUFLL0I7RUFDSSw4QkFBOEIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RhYnMvY29uZmlnL2NvbmZpZy5tYXN0ZXJzLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbS1ncm91cCB7XG4gICAgaW9uLWl0ZW0ge1xuICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuICAgICAgICB9XG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG4ubm9uLWFjdGl2ZSB7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\n\nimport { Master } from 'src/app/system/master';\nimport { System } from 'src/app/system/system';\n\nimport { doAlert, doModal } from 'src/app/core/stdUX';\n\nimport { EditNode } from './edit.node';\nimport { EditMasterComponent } from './edit.master';\n\n\n@Component({\n  selector: 'config-masters',\n  template: `\n    <ion-list>\n      <ion-item-group *ngFor=\"let master of system.masters; let inx=index\">\n        <ion-item lines=\"none\">\n          <ion-icon name=\"code-working\" slot=\"start\"></ion-icon>\n          <span [class.non-active]=\"!master.config.active\">{{master.getAddress()}}<br>{{master.config.name}}</span>\n          <ion-buttons slot=\"end\">\n            <ion-button (click)=\"editMaster(master)\" color=\"primary\">\n              <ion-icon name=\"create\"></ion-icon>\n            </ion-button>\n            <ion-button (click)=\"deleteMaster(master)\" color=\"danger\">\n              <ion-icon name=\"trash\"></ion-icon>\n            </ion-button>\n          </ion-buttons>\n        </ion-item>\n\n        <ion-item lines=\"none\" *ngIf=\"master.config.active\">\n          <ion-label>Schedule {{master.schedule}}</ion-label>\n          <ion-select [(ngModel)]=\"master.schedule\" name=\"schedule{{inx}}\" (ionChange)=\"changeSchedule(master)\" \n                      interface=\"popover\" [compareWith]=\"sameSchedule\">\n            <ion-select-option value=\"0\">{{ \"Config.Week\" |_ }} 1</ion-select-option>\n            <ion-select-option value=\"1\">{{ \"Config.Week\" |_ }} 2</ion-select-option>\n            <ion-select-option value=\"2\">{{ \"Config.Week\" |_ }} 3</ion-select-option>\n            <ion-select-option value=\"3\">{{ \"Config.Holiday\" |_ }}</ion-select-option>\n          </ion-select>\n        </ion-item>\n\n        <ion-item lines=\"none\" *ngFor=\"let node of master.nodes\" (click)=\"editNode(node)\">\n          <ion-icon name=\"list\" slot=\"end\"></ion-icon>\n          {{node.getName()}} <span class=\"addr\">({{node.getNumber()}}, {{node.units.length}}/{{node.nrUnits}})</span>\n        </ion-item>\n      </ion-item-group>\n    </ion-list>\n  `,\n  styleUrls: ['config.masters.scss']\n})\nexport class ConfigMastersComponent {\n\n  constructor(private system: System,\n              private modalCtl: ModalController,\n              private alertCtrl: AlertController) {}\n\n\n  //////////////////\n  // Master Stuff //\n  //////////////////\n  async editMaster(master: Master) {\n    const data = await doModal(this.modalCtl, EditMasterComponent, { masterConfig: master.config });\n\n    if (data.masterConfig) {\n      try {\n        this.system.addMaster(data.masterConfig);\n      } catch (err) {\n        await doAlert(this.alertCtrl, {\n          title: 'Received error from master node',\n          message: err.toString(),\n          buttons: [{ text: 'OK' }]\n        })\n      }\n    }\n  }\n\n  async deleteMaster(master: Master) {\n    const answer = await doAlert(this.alertCtrl, {\n      title: 'Delete master node',\n      message: 'Are you sure you want to delete this master \"' + master.config.name + '\" (' + master.config.address + ')',\n      buttons: [\n        { text: 'No' },\n        { text: 'Yes', id: 'delete' }\n      ]\n    });\n    if (answer === 'delete') {\n      this.system.deleteMaster(master);\n      console.log('nr of masters: ' + this.system.masters.length);\n    }\n  }\n\n  sameSchedule(a,b): boolean {\n    return (a*1 == b*1);\n  }\n\n  changeSchedule(master: Master) {\n    console.log(\"changeSchedule -> \" + master.schedule + \" (\" + (typeof master.schedule) + \")\");\n    master.setSchedule();\n  }\n\n  ////////////////\n  // Node Stuff //\n  ////////////////\n  async editNode(node) {\n    await doModal(this.modalCtl, EditNode, { node: node });\n\n    this.system.updateSystem(true);\n    node.master.requestNodeStatus(node);\n  }\n\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../../core/core.module';\n\nimport { ConfigPage } from './config';\nimport { ConfigMastersComponent } from './config.masters';\nimport { EditMasterComponent } from './edit.master';\nimport { EditNode } from './edit.node';\nimport { ConfigGeneral } from './config.general';\nimport { ConfigGroupsComponent } from './config.groups';\nimport { ConfigScenes } from './config.scenes';\nimport { EditScene } from './edit.scene';\nimport { SelectTrigger } from './select.trigger';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    CoreModule,\n    RouterModule.forChild([{ path: '', component: ConfigPage }])\n  ],\n  entryComponents: [ConfigPage, ConfigMastersComponent, ConfigGeneral, ConfigGroupsComponent, ConfigScenes,\n                    EditMasterComponent, EditNode, EditScene, SelectTrigger],\n  declarations: [ConfigPage, EditMasterComponent, EditNode, EditScene, ConfigMastersComponent, ConfigGeneral, ConfigGroupsComponent, ConfigScenes, SelectTrigger],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class ConfigPageModule {}\n","import { Component } from '@angular/core';\nimport { System } from 'src/app/system/system';\nimport { SceneConfig } from 'src/app/system/types';\nimport { doModal } from 'src/app/core/stdUX';\nimport { ModalController } from '@ionic/angular';\nimport { EditScene } from './edit.scene';\n\n@Component({\n  selector: 'config-scenes',\n  template: `\n    <ion-reorder-group disabled=\"false\" (ionItemReorder)=\"reorderGroups($event)\">\n      <ion-item lines=\"none\" *ngFor=\"let scene of system.scenes; let inx = index;\">\n        <ion-label (click)=\"editScene(scene)\">{{ scene.name }}</ion-label>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"editScene(scene, inx)\" color=\"primary\">\n            <ion-icon name=\"create\"></ion-icon>\n          </ion-button>\n          <ion-reorder *ngIf=\"system.scenes.length > 1\"></ion-reorder>\n        </ion-buttons>\n      </ion-item>\n    </ion-reorder-group>\n  `\n})\nexport class ConfigScenes {\n\n  constructor(protected system: System,\n              private modalCtl: ModalController) {\n  }\n\n  editScene(scene: SceneConfig, inx: number) {\n    this.showEditScene(scene, inx);\n  }\n\n\n  async showEditScene(scene: SceneConfig, inx: number) {\n    const data = await doModal(this.modalCtl, EditScene, {scene});\n\n    if (data.trigger) {\n      console.log(\"result from editscene: \", data);\n\n      if (data.order === -1) {\n        // delete request\n        this.system.scenes.splice(inx, 1);\n\n      } else {\n        // save the edits\n        this.system.scenes[inx] = data;\n      }\n      this.system.writeScenes();\n    }\n  }\n\n  ////////////\n  // Events //\n  ////////////\n  reorderGroups(event) {\n    this.system.scenes[event.detail.from].order = event.detail.to;\n    this.system.scenes[event.detail.to].order = event.detail.from;\n    this.system.scenes.sort((a, b) => a.order - b.order);\n    event.detail.complete();\n    this.system.writeScenes();\n  }\n\n}\n","export default \".version {\\n  margin-left: 4px;\\n  font-size: 0.8rem;\\n  color: grey; }\\n\\n.version .manual {\\n  float: right; }\\n\\n/* segment */\\n\\nion-segment {\\n  margin-bottom: 16px; }\\n\\n.ios ion-segment-button {\\n  --padding-top: 5px;\\n  --indicator-color: #fff; }\\n\\n.md ion-segment-button {\\n  --background-checked: #fff; }\\n\\n@media (prefers-color-scheme: dark) {\\n  .ios ion-segment-button {\\n    --indicator-color: #595959; }\\n  .md ion-segment-button {\\n    --background-checked: var(--ion-color-step-100); } }\\n\\nion-toolbar ion-title {\\n  margin-right: -73px;\\n  margin-left: inherit; }\\n\\nion-toolbar .config-adder {\\n  width: 100px;\\n  margin-top: 4px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2hhbi9MaWJyYXJ5L01vYmlsZSBEb2N1bWVudHMvY29tfmFwcGxlfkNsb3VkRG9jcy9Qcm9qZWN0cy9EdW90ZWNuby9zbWFydHN5c3RlbS9zcmMvYXBwL3RhYnMvY29uZmlnL2NvbmZpZy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixXQUNKLEVBQUE7O0FBQ0E7RUFDRSxZQUNGLEVBQUE7O0FBRUEsWUFBQTs7QUFDQTtFQUNJLG1CQUFtQixFQUFBOztBQUV2QjtFQUVRLGtCQUFjO0VBQ2QsdUJBQWtCLEVBQUE7O0FBRzFCO0VBRVEsMEJBQXFCLEVBQUE7O0FBRzdCO0VBQ0k7SUFFUSwwQkFBa0IsRUFBQTtFQUcxQjtJQUVRLCtDQUFxQixFQUFBLEVBQ3hCOztBQUlUO0VBRVEsbUJBQW1CO0VBQ25CLG9CQUFvQixFQUFBOztBQUg1QjtFQU1RLFlBQVk7RUFDWixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC90YWJzL2NvbmZpZy9jb25maWcuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52ZXJzaW9uIHtcbiAgICBtYXJnaW4tbGVmdDogNHB4O1xuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICAgIGNvbG9yOiBncmV5XG59XG4udmVyc2lvbiAubWFudWFsIHtcbiAgZmxvYXQ6IHJpZ2h0XG59XG5cbi8qIHNlZ21lbnQgKi9cbmlvbi1zZWdtZW50IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xufVxuLmlvcyB7XG4gICAgaW9uLXNlZ21lbnQtYnV0dG9uIHtcbiAgICAgICAgLS1wYWRkaW5nLXRvcDogNXB4O1xuICAgICAgICAtLWluZGljYXRvci1jb2xvcjogI2ZmZjtcbiAgICB9XG59XG4ubWQge1xuICAgIGlvbi1zZWdtZW50LWJ1dHRvbiB7XG4gICAgICAgIC0tYmFja2dyb3VuZC1jaGVja2VkOiAjZmZmO1xuICAgIH1cbn1cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcbiAgICAuaW9zIHtcbiAgICAgICAgaW9uLXNlZ21lbnQtYnV0dG9uIHtcbiAgICAgICAgICAgIC0taW5kaWNhdG9yLWNvbG9yOiAjNTk1OTU5O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5tZCB7XG4gICAgICAgIGlvbi1zZWdtZW50LWJ1dHRvbiB7XG4gICAgICAgICAgICAtLWJhY2tncm91bmQtY2hlY2tlZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMTAwKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuaW9uLXRvb2xiYXIge1xuICAgIGlvbi10aXRsZSB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogLTczcHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBpbmhlcml0O1xuICAgIH1cbiAgICAuY29uZmlnLWFkZGVyIHtcbiAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgfVxufVxuXG4iXX0= */\"","import { Component } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\n\nimport { System } from '../../system/system';\nimport { kEmptyGroup, kEmptyScene } from '../../system/types';\nimport { doModal, doAlert } from 'src/app/core/stdUX';\nimport { EditMasterComponent } from './edit.master';\nimport { EditScene } from './edit.scene';\n\n@Component({\n  selector: 'page-config',\n  template: `\n  <ion-header>\n    <ion-toolbar>\n      <img slot=\"start\" src=\"/assets/icon/duotecno.png\" />\n      <ion-title>{{'Page.Config' |_ }}</ion-title>\n\n      <ion-buttons slot=\"end\" class=\"config-adder\">\n        <ion-button (click)=\"addGroup()\" *ngIf=\"what === 'groups'\">\n          <ion-icon name=\"add\"></ion-icon> {{\"Config.Group\" |_ }}\n        </ion-button>\n\n        <ion-button (click)=\"addMaster()\" *ngIf=\"what === 'masters'\">\n          <ion-icon name=\"add\"></ion-icon> {{\"Config.Master\" |_ }}\n        </ion-button>\n\n        <ion-button (click)=\"addScene()\" *ngIf=\"what === 'scenes'\">\n          <ion-icon name=\"add\"></ion-icon> {{\"Config.Scenes.scene\" |_ }}\n        </ion-button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class=\"ion-padding\">\n    <ion-segment [(ngModel)]=\"what\">\n      <ion-segment-button value=\"general\">\n        <ion-icon name=\"settings-outline\"></ion-icon>\n        <ion-label>{{ \"Config.General\" |_ }}</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"groups\">\n        <ion-icon name=\"folder\"></ion-icon>\n        <ion-label>{{ \"Config.Groups\" |_ }}</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"masters\">\n        <ion-icon name=\"code-working\"></ion-icon>\n        <ion-label>{{ \"Config.Masters\" |_ }}</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"scenes\">\n        <ion-icon name=\"list\"></ion-icon>\n        <ion-label>{{ \"Config.Scenes\" |_ }}</ion-label>\n      </ion-segment-button>\n    </ion-segment>\n\n    <config-general *ngIf=\"what === 'general'\"></config-general>\n    <config-groups  *ngIf=\"what === 'groups'\"></config-groups>\n    <config-scenes  *ngIf=\"what === 'scenes'\"></config-scenes>\n    <config-masters *ngIf=\"what === 'masters'\"></config-masters>\n\n    <p class=\"version\">\n      <span>v2.0.0b1 © Johan Coppieters &amp; Duotecno</span>\n      <span class=\"manual\">Download the <a href=\"https://www.duotecno.be/wp-content/uploads/2020/05/Duotecno-smartbox-app-1.pdf\">manual</a></span>\n    </p>\n  </ion-content>\n  `,\n  styleUrls: ['config.scss']\n})\nexport class ConfigPage {\n\n  what: string;\n\n  constructor(private modalCtl: ModalController,\n              private alertCtrl: AlertController,\n              private system: System) {\n\n    this.what = (this.system.masters.length <= 0) ? 'masters' : 'general';\n  }\n\n  /////////////\n  // Masters //\n  /////////////\n  async addMaster() {\n    const data = await doModal(this.modalCtl, EditMasterComponent, {});\n\n    if (data.masterConfig) {\n      try {\n        this.system.addMaster(data.masterConfig);\n      } catch (err) {\n        await doAlert(this.alertCtrl, {\n          title: 'Received error from master node',\n          message: err.toString(),\n          buttons: [{ text: 'OK' }]\n        });\n      }\n    }\n  }\n\n\n  ////////////\n  // Groups //\n  ////////////\n  addGroup() {\n    // find max id\n    const max = this.system.groups.reduce((m, g) => (g.id > m) ? g.id : m, this.system.groups[0].id);\n    this.system.groups.push({...kEmptyGroup, id: max + 1});\n  }\n\n\n  ////////////\n  // Scenes //\n  ////////////\n  async addScene() {\n    const scene = {...kEmptyScene };\n    this.system.scenes.push(scene);\n    const data = await doModal(this.modalCtl, EditScene, {scene});\n    this.system.writeScenes();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MasterConfig, Sanitizers } from '../../system/types';\nimport { NavParams, ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'edit-master',\n  template: `\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>{{ \"Config.Master\" |_ }}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content class=\"ion-padding\">\n    <ion-list>\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">External IP or URL</ion-label>\n        <ion-input type=\"text\" name=\"address\" [(ngModel)]=\"masterConfig.address\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">Port</ion-label>\n        <ion-input type=\"text\" name=\"port\" [(ngModel)]=\"masterConfig.port\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">Password</ion-label>\n        <ion-input type=\"password\" name=\"password\" [(ngModel)]=\"masterConfig.password\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label position=\"stacked\">Name</ion-label>\n        <ion-input type=\"text\" name=\"name\" [(ngModel)]=\"masterConfig.name\"></ion-input>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label>Active</ion-label>\n        <ion-toggle name=\"active\" [(ngModel)]=\"masterConfig.active\"></ion-toggle>\n      </ion-item>\n    </ion-list>\n  </ion-content>\n\n  <ion-footer class=\"ion-padding\">\n    <ion-buttons>\n      <ion-button (click)=\"save()\" fill=\"solid\" color=\"primary\">{{\"General.Save\" |_ }}</ion-button>\n      <ion-button (click)=\"cancel()\" fill=\"outline\" color=\"primary\">{{\"General.Cancel\" |_ }}</ion-button>\n    </ion-buttons>\n  </ion-footer>\n  `\n})\nexport class EditMasterComponent implements OnInit {\n  masterConfig: MasterConfig;\n\n  constructor(private modalCtrl: ModalController,\n              private navParams: NavParams) {\n  }\n\n  ngOnInit() {\n    this.masterConfig = this.navParams.get('masterConfig') || Sanitizers.masterConfig();\n  }\n\n  save() {\n    this.modalCtrl.dismiss({masterConfig: this.masterConfig});\n  }\n\n  cancel() {\n    this.modalCtrl.dismiss({});\n  }\n\n}\n","export default \".select-text {\\n  font-size: 1.2rem;\\n  color: grey; }\\n\\n.select-ios .select-icon .select-icon-inner {\\n  margin-top: -4px; }\\n\\n.item-select .label {\\n  color: #000; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2hhbi9MaWJyYXJ5L01vYmlsZSBEb2N1bWVudHMvY29tfmFwcGxlfkNsb3VkRG9jcy9Qcm9qZWN0cy9EdW90ZWNuby9zbWFydHN5c3RlbS9zcmMvYXBwL3RhYnMvY29uZmlnL2VkaXQubm9kZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCO0VBQ2pCLFdBQVcsRUFBQTs7QUFFZjtFQUNJLGdCQUFnQixFQUFBOztBQUVwQjtFQUNJLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RhYnMvY29uZmlnL2VkaXQubm9kZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdC10ZXh0IHtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICBjb2xvcjogZ3JleTtcbn1cbi5zZWxlY3QtaW9zIC5zZWxlY3QtaWNvbiAuc2VsZWN0LWljb24taW5uZXIge1xuICAgIG1hcmdpbi10b3A6IC00cHg7XG59XG4uaXRlbS1zZWxlY3QgLmxhYmVsIHtcbiAgICBjb2xvcjogIzAwMDtcbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { System } from '../../system/system';\nimport { Node } from '../../system/protocol';\n\n@Component({\n  selector: 'edit-node',\n  styleUrls: ['edit.node.scss'],\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>{{ \"Node.of\" |_ }} {{node.getName()}}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-list>\n        <ion-item *ngFor=\"let unit of node.units\" lines=\"none\">\n          <ion-label>{{unit.getName()}}<br/>\n            <span class=\"type\">{{unit.typeName()}}</span>\n            <span class=\"addr\">({{unit.getNumber()}})</span>\n          </ion-label>\n          <ion-checkbox slot=\"start\" [(ngModel)]=\"unit.active\" color=\"secondary\" [disabled]=\"unit.name[0]==','\"></ion-checkbox>\n          <ion-select *ngIf=\"system.groups.length > 1\" [(ngModel)]=\"unit.group\" [compareWith]=\"sameGroup\"\n                      interface=\"popover\" [interfaceOptions]=\"{title: unit.getName()}\">\n            <ion-select-option *ngFor=\"let group of system.groups\" value=\"{{group.id}}\">{{group.name}}</ion-select-option>\n          </ion-select>\n        </ion-item>\n      </ion-list>\n    </ion-content>\n\n    <ion-footer class=\"ion-padding\">\n      <ion-buttons>\n        <ion-button (click)=\"done()\" expand=\"block\">{{ \"General.Done\" |_ }}</ion-button>\n      </ion-buttons>\n    </ion-footer>\n  `\n})\nexport class EditNode implements OnInit {\n  node: Node;\n\n  constructor(protected modalCtrl: ModalController, \n              protected navParams: NavParams, \n              protected system: System) {\n  }\n\n  ngOnInit() {\n    this.node = <Node> this.navParams.get('node');\n\n    if ((! this.node.active) || (this.node.nrUnits !== this.node.units.length)) {\n      this.node.master.fetchAllUnits(this.node);\n    }\n  }\n\n  sameGroup(a,b): boolean {\n    return a*1 == b*1;\n  }\n\n  done() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ModalController, NavParams, AlertController } from '@ionic/angular';\nimport { System } from '../../system/system';\nimport { SceneConfig, Sanitizers } from 'src/app/system/types';\nimport { doModal, doAlert } from 'src/app/core/stdUX';\nimport { SelectTrigger } from './select.trigger';\n\n@Component({\n  selector: 'edit-scene',\n  styles: ['ion-label.triggerName { text-align: right; margin-right: 8px }',\n           'span.typeAndAddr { font-size: 0.9rem; color: var(--ion-color-medium) }',\n           'ion-button.delete { float: right; display: inline-block }',\n           'ion-buttons { display: inline }',\n           'ion-input[type=number] { text-align: right; width: 50px }'],\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>{{ \"Config.Scenes.for\" |_ }} {{scene.name}}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-list>\n        <ion-item lines=\"none\">\n          <ion-label position=\"stacked\">{{ \"Config.Scenes.name\" |_ }}</ion-label>\n          <ion-input type=\"text\" name=\"name\" [(ngModel)]=\"scene.name\"></ion-input>\n        </ion-item>\n\n        <ion-item lines=\"none\">\n          <ion-label>{{ \"Config.Scenes.triggeredBy\" |_ }}:</ion-label>\n          <ion-label class=\"triggerName\" (click)=\"selectTrigger(scene)\">{{ triggerName }}</ion-label>\n          <ion-icon name=\"create-outline\" (click)=\"selectTrigger(scene)\"></ion-icon>\n        </ion-item>\n\n        <ion-item *ngFor=\"let unit of system.controls; let inx = index;\">\n          <ion-label>{{unit.getName()}}<br/>\n            <span class=\"typeAndAddr\">{{unit.typeName()}} ({{unit.getNumber()}})</span>\n          </ion-label>\n          <ion-checkbox slot=\"start\" [(ngModel)]=\"selection[inx]\" color=\"secondary\"></ion-checkbox>\n          <ion-toggle *ngIf=\"unit.isSwitch()\" slot=\"end\" [(ngModel)]=\"values[inx]\" (ionBlur)=\"changeS(inx)\"></ion-toggle>\n          <ion-input *ngIf=\"unit.isDimmer()\" slot=\"end\" type=\"number\" [(ngModel)]=\"values[inx]\" (ionBlur)=\"changeD(inx)\"></ion-input>\n        </ion-item>\n      </ion-list>\n    </ion-content>\n\n    <ion-footer class=\"ion-padding\">\n      <ion-buttons>\n        <ion-button (click)=\"done()\" color=\"secondary\">{{ \"General.Done\" |_ }}</ion-button>\n        <ion-button (click)=\"cancel()\" color=\"primary\">{{ \"General.Cancel\" |_ }}</ion-button>\n        <ion-button (click)=\"delete()\" class=\"delete\" color=\"primary\"><ion-icon name=\"trash\"></ion-icon>{{ \"General.Delete\" |_ }}</ion-button>\n      </ion-buttons>\n    </ion-footer>\n  `\n})\nexport class EditScene {\n  scene: SceneConfig;\n  selection: boolean[];\n  values: number[];\n  triggerName: string; \n\n  // select units + values\n  // select unit (mood or input)\n\n  constructor(protected modalCtrl: ModalController,\n              private alertCtrl: AlertController,\n              protected system: System,\n              private navParams: NavParams) {\n  }\n\n  ngOnInit() {\n    this.scene = Sanitizers.sceneConfig(this.navParams.get('scene'));\n\n    // which controls are used within this scene and what is the desired value\n    this.selection = [];\n    this.values = [];\n    this.system.controls.forEach(c => {\n      const unit = this.scene.units.find(u => c.isUnit(u.masterAddress, u.masterPort, u.logicalNodeAddress, u.logicalAddress));\n      this.selection.push(!! unit);\n      if (unit) console.log(unit.logicalAddress + \" = \" + unit.value); else console.log(\"----\");\n      this.values.push( (unit) ? <number> unit.value : 0);\n    });\n\n    // find the name of the trigger\n    this.triggerName = this.getTriggerName();\n    \n\n    console.log('EditScene:', this.scene, ', selection: ', this.selection, ', values: ', this.values);\n  }\n\n  getTriggerName(): string {\n    if (this.scene.trigger.masterAddress) {\n      const master = this.system.findMaster(this.scene.trigger.masterAddress, this.scene.trigger.masterPort);\n      if (master) {\n        const unit = master.findUnit(this.scene.trigger.logicalNodeAddress, this.scene.trigger.logicalAddress);\n        return unit.getName();\n      }\n    }\n    return \"-\";\n  }\n\n\n  async selectTrigger(scene: SceneConfig) {\n    const data = await doModal(this.modalCtrl, SelectTrigger, {trigger: scene.trigger, name: this.scene.name});\n\n    if (data.masterAddress) {\n      console.log(\"result select trigger: \", data);\n      this.scene.trigger = data;\n      this.triggerName = this.getTriggerName();\n    }\n  }\n\n  ////////////\n  // Events //\n  ////////////\n\n  changeD(inx) {\n    console.log(\"changed dimmer: \" + inx + \" -> \" + this.values[inx]);\n    if (this.values[inx] < 0) this.values[inx] = 0;\n    if (this.values[inx] > 100) this.values[inx] = 100;\n  }\n\n  changeS(inx) {\n    console.log(\"changed switch: \" + inx + \" -> \" + this.values[inx]);\n  }\n\n  done() {\n    // reconstruct the array with selected units (and their values)\n    this.scene.units = [];\n    this.system.controls.forEach((u,i) => {\n      if (this.selection[i]) {\n        this.scene.units.push(\n          Sanitizers.unitScene({masterAddress: u.node.master.getAddress(), masterPort: u.node.master.getPort(), \n            logicalNodeAddress: u.node.logicalAddress, logicalAddress: u.logicalAddress,\n            value: this.values[i]})\n        );\n      }\n    });\n    this.modalCtrl.dismiss(this.scene);\n    this.system.triggerRebuild(true);\n  }\n  cancel() {\n    this.modalCtrl.dismiss();\n  }\n  async delete() {\n    const answer = await doAlert(this.alertCtrl, {\n      title: 'Delete scene',\n      message: 'Are you sure you want to delete the scene \"' + this.scene.name + '\" ?',\n      buttons: [\n        { text: 'No' },\n        { text: 'Yes', id: 'delete' }\n      ]\n    });\n    if (answer === 'delete') {\n      this.scene.order = -1; // signal delete\n      this.modalCtrl.dismiss();\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { System } from '../../system/system';\nimport { Sanitizers, UnitScene } from 'src/app/system/types';\nimport { UnitType } from 'src/app/system/protocol';\n\n@Component({\n  selector: 'select-trigger',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>{{ \"Config.Scenes.selectTriggerFor\" |_ }} {{sceneName}}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-item>\n        <ion-label>\n          {{ \"Config.Scenes.trigger\" |_ }}\n        </ion-label>\n        <ion-select [(ngModel)]=\"curType\" [compareWith]=\"sameMode\"\n                    okText=\"{{ 'General.Done' |_ }}\" cancelText=\"{{ 'General.Cancel' |_ }}\">\n          <ion-select-option value=\"0\">{{ \"scene.trigger.off\" |_ }}</ion-select-option>\n          <ion-select-option value=\"1\">{{ \"scene.trigger.on\" |_ }}</ion-select-option>\n          <ion-select-option value=\"2\">{{ \"scene.trigger.long\" |_ }}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-radio-group [(ngModel)]=\"curUnit\">\n        <ion-item *ngFor=\"let unit of system.moods; let inx = index;\" lines=\"none\">\n          <ion-label>\n            {{unit.getName()}} - <span class=\"addr\">({{unit.getNumber()}})</span>\n          </ion-label>\n          <ion-radio slot=\"start\" color=\"secondary\" value=\"U{{inx}}\"></ion-radio>\n        </ion-item>\n      </ion-radio-group>\n    </ion-content>\n\n    <ion-footer class=\"ion-padding\">\n      <ion-buttons>\n        <ion-button (click)=\"done()\" color=\"secondary\">{{ \"General.Done\" |_ }}</ion-button>\n        <ion-button (click)=\"cancel()\" color=\"primary\">{{ \"General.Cancel\" |_ }}</ion-button>\n      </ion-buttons>\n    </ion-footer>\n  `\n})\nexport class SelectTrigger {\n  sceneName: string = \"\";\n  trigger: UnitScene;\n  curType = UnitType.kNoType;\n  curUnit: string;\n\n  // select units + values\n  // select unit (mood or input)\n\n  constructor(protected modalCtrl: ModalController,\n              protected system: System,\n              private navParams: NavParams) {\n  }\n\n  ngOnInit() {\n    this.sceneName = this.navParams.get('name') || \"\";\n    this.trigger = Sanitizers.unitScene(this.navParams.get('trigger'));\n    this.curUnit = \"U\" + this.system.moods.findIndex(mood => mood.isUnit(\n      this.trigger.masterAddress, this.trigger.masterPort, \n      this.trigger.logicalNodeAddress, this.trigger.logicalAddress\n    ));\n    this.curType = <UnitType> this.trigger.value;\n    console.log('SelectTrigger:' + this.curUnit + ', trigger type: ' + this.curType);\n  }\n\n  done() {\n    if (! this.curUnit) this.modalCtrl.dismiss();\n    const unit = this.system.moods[parseInt(this.curUnit.substr(1))];\n    if (! unit) this.modalCtrl.dismiss();\n\n    this.modalCtrl.dismiss(Sanitizers.unitScene({\n      logicalNodeAddress: unit.logicalNodeAddress,\n      logicalAddress: unit.logicalAddress,\n      masterAddress: unit.node.master.getAddress(),\n      masterPort: unit.node.master.getPort(),\n      value: this.curType\n    }));\n  }\n\n  cancel() {\n    this.modalCtrl.dismiss();\n  }\n  sameMode(a,b): boolean {\n    return a*1 == b*1;\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { StdPage } from '../../core/stdpage';\nimport { System } from '../../system/system';\n\n@Component({\n  selector: 'page-control',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-menu-toggle slot=\"start\">\n          <img src=\"/assets/icon/duotecno.png\" />\n          <ion-icon name=\"{{ system.isSplitted ? '' : 'menu'}}\"></ion-icon>\n        </ion-menu-toggle>\n        <ion-title>{{ \"Page.Control\" |_ }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <std-page services=\"controls\" [showUpDowns]=\"! this.system.config.stores\"></std-page>\n    </ion-content>\n  `,\n  styles: [':root .noMaster { text-align: center }']\n})\n\nexport class ControlPage {\n  @ViewChild(StdPage, {static: true}) stdPage: StdPage;\n\n  constructor(protected system: System) {}\n\n  ionViewWillEnter() {\n    this.stdPage.refreshServices();\n  }\n\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { StdPage } from 'src/app/core/stdpage';\nimport { System } from 'src/app/system/system';\n\n@Component({\n  selector: 'page-moods',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-menu-toggle slot=\"start\">\n          <img src=\"/assets/icon/duotecno.png\" />\n          <ion-icon name=\"{{ system.isSplitted ? '' : 'menu'}}\"></ion-icon>\n        </ion-menu-toggle>\n        <ion-title>{{ \"Page.Moods\" |_ }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <std-page services=\"moods\"></std-page>\n    </ion-content>\n  `\n})\nexport class MoodsPage {\n  @ViewChild(StdPage, {static: false}) stdPage: StdPage;\n\n  constructor(protected system: System) {}\n\n  ionViewWillEnter() {\n    this.stdPage.refreshServices();\n  }\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { StdPage } from '../../core/stdpage';\nimport { System } from '../../system/system';\n\n@Component({\n  selector: 'page-stores',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-menu-toggle slot=\"start\">\n          <img src=\"/assets/icon/duotecno.png\" />\n          <ion-icon name=\"{{ system.isSplitted ? '' : 'menu'}}\"></ion-icon>\n        </ion-menu-toggle>\n        <ion-title>{{ \"Page.Stores\" |_ }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <std-page services=\"stores\" [showUpDowns]=\"true\"></std-page>\n    </ion-content>\n  `\n})\nexport class StoresPage {\n  @ViewChild(StdPage, {static: true}) stdPage: StdPage;\n\n  constructor(protected system: System) {}\n\n  ionViewWillEnter() {\n    this.stdPage.refreshServices();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\nimport { ControlPage } from '../control/control.page';\nimport { TemperaturePage } from '../temperature/temperature.page';\nimport { StoresPage } from '../stores/stores.page';\nimport { MoodsPage } from '../moods/moods.page';\nimport { ConfigPage } from '../config/config';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {path: 'control', component: ControlPage },\n      { path: 'temperature', component: TemperaturePage },\n      { path: 'stores', component: StoresPage },\n      { path: 'moods', component: MoodsPage },\n      { path: 'config', component: ConfigPage },\n      { path: '', redirectTo: '/tabs/control', pathMatch: 'full' }\n    ]\n  },\n  { path: '', redirectTo: '/tabs/control', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs-routing.module';\n\nimport { TabsPage } from './tabs.page';\nimport { CoreModule } from 'src/app/core/core.module';\n\nimport { MoodsPage } from '../moods/moods.page';\nimport { StoresPage } from '../stores/stores.page';\nimport { TemperaturePage } from '../temperature/temperature.page';\nimport { ControlPage } from '../control/control.page';\nimport { ConfigPageModule } from '../config/config.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    CoreModule,\n    TabsPageRoutingModule,\n    ConfigPageModule\n  ],\n  declarations: [TabsPage, ControlPage, TemperaturePage, MoodsPage, StoresPage],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TabsPageModule {}\n","import { Component } from '@angular/core';\nimport { System } from 'src/app/system/system';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html'\n})\nexport class TabsPage {\n\n  constructor(protected system: System) {}\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { System } from '../../system/system';\nimport { StdPage } from '../../core/stdpage';\n\n@Component({\n  selector: 'page-temperature',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-menu-toggle slot=\"start\">\n          <img src=\"/assets/icon/duotecno.png\" />\n          <ion-icon name=\"{{ system.isSplitted ? '' : 'menu'}}\"></ion-icon>\n        </ion-menu-toggle>\n        <ion-title>{{ \"Page.Temperature\" |_ }}</ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <std-page services=\"temperatures\"></std-page>\n    </ion-content>\n  `\n})\n\nexport class TemperaturePage {\n  @ViewChild(StdPage, {static: true}) stdPage: StdPage;\n\n  constructor(protected system: System) {}\n\n  ionViewWillEnter() {\n    this.stdPage.refreshServices();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}